#include "../include/cin_dir.h"
#include <fstream>
using namespace std;

CinDir::CinDir(){
}
CinDir::~CinDir(){}

Matrice CinDir::Rot(double angle, char axe, vector<double> pos){}
Matrice CinDir::Trans(double trans, char axe, vector<double> pos){}
Matrice CinDir::calcForwCin(vector<double> var){
    vector<double> L1,L2,L3;
    vector<double> L4{0,0,0,1};
    L1.push_back(cos(var[5])*cos(var[0])*cos(var[3])+sin(var[3])*(cos()));

}

[ cos(theta_6)*(cos(theta_1)*cos(theta_4) + sin(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) - sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_4) - cos(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) - sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_3) + cos(theta_3)*sin(theta_1)*sin(theta_2))),   sin(theta_6)*(cos(theta_1)*cos(theta_4) + sin(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) + cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_4) - cos(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) - sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_3) + cos(theta_3)*sin(theta_1)*sin(theta_2))), sin(theta_5)*(cos(theta_1)*sin(theta_4) - cos(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) + cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_3) + cos(theta_3)*sin(theta_1)*sin(theta_2)), sin(theta_5)*(cos(theta_1)*sin(theta_4) - cos(theta_4)*(sin(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_2)*cos(theta_3)*sin(theta_1))) + cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_3) + cos(theta_3)*sin(theta_1)*sin(theta_2))]
[ sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_4) + cos(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)*sin(theta_2))) - cos(theta_6)*(cos(theta_4)*sin(theta_1) - sin(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))), - sin(theta_6)*(cos(theta_4)*sin(theta_1) - sin(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) - cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_4) + cos(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)*sin(theta_2))), cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)*sin(theta_2)) - sin(theta_5)*(sin(theta_1)*sin(theta_4) + cos(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))), cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_3) + cos(theta_1)*cos(theta_3)*sin(theta_2)) - sin(theta_5)*(sin(theta_1)*sin(theta_4) + cos(theta_4)*(cos(theta_1)*sin(theta_2)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))]
[                                                                                                                                           sin(theta_6)*(sin(theta_5)*(cos(theta_2)*cos(theta_3) - sin(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2))) + cos(theta_6)*sin(theta_4)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2)),                                                                                                                                             sin(theta_4)*sin(theta_6)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2)) - cos(theta_6)*(sin(theta_5)*(cos(theta_2)*cos(theta_3) - sin(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2))),                                                                                   cos(theta_5)*(cos(theta_2)*cos(theta_3) - sin(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2)),                                                                                   cos(theta_5)*(cos(theta_2)*cos(theta_3) - sin(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_2)*sin(theta_3) + cos(theta_3)*sin(theta_2))]

